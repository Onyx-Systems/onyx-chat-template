import { writeFileSync, readFileSync } from "fs";

export const generateMetadata = async () => {
  writeIntentsToFile();
  writeTriggersToFile();
  writeButtonsToFile();
};

export const getDefaultCorpus = () => {
  const default_corpus_buffer = readFileSync(
    "nlu/documents/default_corpus.json"
  );
  const default_corpus = JSON.parse(default_corpus_buffer.toString());
  return default_corpus;
};

export const getIntents = (): string[] => {
  const intents = getDefaultCorpus().data.map((item: any) => item.intent);
  return intents as string[];
};

export const getDataForIntent = (intent: string) => {
  const data = getDefaultCorpus().data.find(
    (item: any) => item.intent === intent
  );
  return data;
};

export const getTriggers = () => {
  const triggers: {
    [key: string]: {
      type: string;
      args: { [key: string]: any };
      attachments: string[];
    }[];
  } = {};
  getDefaultCorpus().data.forEach((item: any) => {
    if (item.triggers) {
      triggers[item.intent] = item.triggers;
    }
  });

  return triggers;
};

export const getButtons = () => {
  const buttons: { [intent: string]: { type: string; metadata?: string }[] } =
    {};
  getDefaultCorpus().data.forEach((item: any) => {
    if (item.buttons) {
      buttons[item.intent] = item.buttons;
    }
  });

  return buttons;
};

export const getAllButtons = () => {
  const buttons: { type: string; metadata?: string }[] = [];

  getDefaultCorpus().data.forEach((item: any) => {
    if (item.buttons) {
      buttons.push(...item.buttons);
    }
  });

  const uniqueButtons = buttons.filter(
    (item, index) =>
      buttons.findIndex((button) => button.type === item.type) === index
  );

  return uniqueButtons;
};

export const writeIntentsToFile = async () => {
  const intents = getIntents();

  writeFileSync(
    "./storage/metadata/intents.autogenerated.json",
    JSON.stringify(intents, null, 2)
  );
};

export const writeTriggersToFile = async () => {
  const triggers = getTriggers();

  writeFileSync(
    "./storage/metadata/triggers.autogenerated.json",
    JSON.stringify(triggers, null, 2)
  );
};

export const writeButtonsToFile = async () => {
  const buttons = getButtons();

  writeFileSync(
    "./storage/metadata/buttons.autogenerated.json",
    JSON.stringify(buttons, null, 2)
  );
};
